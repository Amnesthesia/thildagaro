# Scaffolding generated by Casein v5.1.1.5

module Casein
  class ImagesController < Casein::CaseinController

    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]

    def index
      @casein_page_title = 'Images'
  		@images = Image.order(sort_order(:path)).paginate :page => params[:page]
    end

    def show
      @casein_page_title = 'View image'
      @image = Image.find params[:id]
    end

    def new
      @casein_page_title = 'Add a new image'
    	@image = Image.new
    end

    def create
      @image = Image.new image_params
      puts("I GOT " + image_params.to_s)

      if @image.save
        flash[:notice] = 'Image created'
        redirect_to casein_images_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new image'
        render :action => :new
      end
    end

    def update
      @casein_page_title = 'Update image'

      @image = Image.find params[:id]

      if @image.update_attributes image_params
        flash[:notice] = 'Image has been updated'
        redirect_to casein_images_path
      else
        flash.now[:warning] = 'There were problems when trying to update this image'
        render :action => :show
      end
    end

    def destroy
      @image = Image.find params[:id]

      @image.destroy

      respond_to do |format|
          format.js { render :layout => false }
          format.html {
              flash[:notice] = 'Image has been deleted'
              redirect_to casein_images_path
          }
      end      
    end

    private

      def image_params
        params.require(:image).permit(:path)
      end

  end
end
